{
  "swagger" : "2.0",
  "info" : {
    "description" : "Essa é uma possível solução para o teste técnico da BRy Tecnologia.",
    "version" : "1.0.0",
    "title" : "Employee Management API",
    "contact" : {
      "email" : "alyssondrewws@gmail.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    }
  },
  "tags" : [ {
    "name" : "Employee",
    "description" : "Gerenciamento de funcionários."
  }, {
    "name" : "Company",
    "description" : "Gerenciamento das empresas."
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/employee" : {
      "get" : {
        "tags" : [ "Employee" ],
        "summary" : "Retorna todos os funcionários que estão no banco de dados",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Employee" ],
        "summary" : "Adiciona um novo funcionário ao banco de dados",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/employee/{id}" : {
      "get" : {
        "tags" : [ "Employee" ],
        "summary" : "Retorna o funcionário do banco de dados baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Employee" ],
        "summary" : "Atualiza um ou mais dados do funcionário dentro do banco de dades baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Employee"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Employee" ],
        "summary" : "Deleta o funcionário do banco de dados baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/company" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Retorna todas as empresas que estão no banco de dados",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Company" ],
        "summary" : "Adiciona uma nova empresa ao banco de dados",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "422" : {
            "description" : "Unprocessable Entity"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/company/{id}" : {
      "get" : {
        "tags" : [ "Company" ],
        "summary" : "Retorna a empresa do banco de dados baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Company" ],
        "summary" : "Atualiza um ou mais dados da empresa dentro do banco de dades baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Company" ],
        "summary" : "Deleta a empresa do banco de dados baseado no id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "404" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions" : {
    "Employee" : {
      "type" : "object",
      "required" : [ "address", "company", "cpf", "email", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Jaqueline Hadassa Caldeira"
        },
        "cpf" : {
          "type" : "string",
          "example" : "71873443846"
        },
        "email" : {
          "type" : "string",
          "example" : "jaquelinehadassacaldeira..jaquelinehadassacaldeira@siemens.com"
        },
        "address" : {
          "type" : "string",
          "example" : "Avenida Expedito Garcia 162, 710, Campo Grande, Cariacica, Espirito Santo"
        },
        "company" : {
          "type" : "number",
          "example" : 1.0
        }
      }
    },
    "Company" : {
      "type" : "object",
      "required" : [ "address", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Liz e Alexandre Telecom ME"
        },
        "cpf" : {
          "type" : "string",
          "example" : "44220061000130"
        },
        "address" : {
          "type" : "string",
          "example" : "Travessa Primeiro Amor, 379, Jardim da Conquista, São Paulo, São Paulo"
        }
      }
    }
  }
}